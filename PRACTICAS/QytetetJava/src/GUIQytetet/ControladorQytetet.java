/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIQytetet;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import modeloqytetet.*;

/**
 *
 * @author jjavier98
 */
public class ControladorQytetet extends javax.swing.JFrame {

    private static Qytetet modeloQytetet;

    /**
     * Creates new form ControladorQytetet
     */
    public ControladorQytetet() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SalirCarcelDado = new javax.swing.JButton();
        SalirCarcelPagando = new javax.swing.JButton();
        ComprarPropiedad = new javax.swing.JButton();
        Jugar = new javax.swing.JButton();
        SiguienteJugador = new javax.swing.JButton();
        AplicarSorpresa = new javax.swing.JButton();
        vistaQytetet1 = new GUIQytetet.VistaQytetet();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SalirCarcelDado.setText("Salir Cárcel Dado");
        SalirCarcelDado.setEnabled(false);
        SalirCarcelDado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirCarcelDadoActionPerformed(evt);
            }
        });

        SalirCarcelPagando.setText("Salir Cárcel Pagando");
        SalirCarcelPagando.setEnabled(false);
        SalirCarcelPagando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirCarcelPagandoActionPerformed(evt);
            }
        });

        ComprarPropiedad.setText("Comprar Propiedad");
        ComprarPropiedad.setEnabled(false);
        ComprarPropiedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComprarPropiedadActionPerformed(evt);
            }
        });

        Jugar.setText("JUGAR");
        Jugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JugarActionPerformed(evt);
            }
        });

        SiguienteJugador.setText("Siguiente Jugador");
        SiguienteJugador.setEnabled(false);
        SiguienteJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SiguienteJugadorActionPerformed(evt);
            }
        });

        AplicarSorpresa.setText("Aplicar Sorpresa");
        AplicarSorpresa.setEnabled(false);
        AplicarSorpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AplicarSorpresaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SalirCarcelDado, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SalirCarcelPagando, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(Jugar, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(ComprarPropiedad, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(AplicarSorpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(SiguienteJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addComponent(vistaQytetet1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(vistaQytetet1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ComprarPropiedad)
                            .addComponent(AplicarSorpresa)
                            .addComponent(SiguienteJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SalirCarcelDado)
                                .addGap(18, 18, 18)
                                .addComponent(SalirCarcelPagando))
                            .addComponent(Jugar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static Qytetet getJuego() {
        return modeloQytetet;
    }

    public void habilitarComenzarTurno() {
        this.ComprarPropiedad.setEnabled(false);
        this.SiguienteJugador.setEnabled(false);
        this.AplicarSorpresa.setEnabled(false);
        if (modeloQytetet.getJugadorActual().isEncarcelado()) {
            this.SalirCarcelPagando.setEnabled(true);
            this.SalirCarcelDado.setEnabled(true);
        } else {
            this.Jugar.setEnabled(true);
        }
    }

    private void SalirCarcelPagandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirCarcelPagandoActionPerformed
        boolean resultado = modeloQytetet.intentarSalirCarcel(MetodoSalirCarcel.PAGANDOLIBERTAD);
        this.SalirCarcelPagando.setEnabled(false);
        this.SalirCarcelDado.setEnabled(false);
        if (resultado) {
            JOptionPane.showMessageDialog(this, "Sales de la cárcel");
            this.Jugar.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "NO sales de la carcel");
            this.SiguienteJugador.setEnabled(true);
        }
        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_SalirCarcelPagandoActionPerformed

    private void SalirCarcelDadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirCarcelDadoActionPerformed
        boolean resultado = modeloQytetet.intentarSalirCarcel(MetodoSalirCarcel.TIRANDODADO);
        this.SalirCarcelPagando.setEnabled(false);
        this.SalirCarcelDado.setEnabled(false);
        if (resultado) {
            JOptionPane.showMessageDialog(this, "Sales de la cárcel");
            this.Jugar.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "NO sales de la carcel");
            this.SiguienteJugador.setEnabled(true);
        }
        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_SalirCarcelDadoActionPerformed

    private void JugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JugarActionPerformed
        boolean resultado = modeloQytetet.jugar();
        this.vistaQytetet1.actualizar(modeloQytetet);

        this.Jugar.setEnabled(false);
        this.SalirCarcelPagando.setEnabled(false);
        this.SalirCarcelDado.setEnabled(false);
        this.AplicarSorpresa.setEnabled(false);
        this.ComprarPropiedad.setEnabled(false);
        this.SiguienteJugador.setEnabled(false);

        Casilla cas = modeloQytetet.getJugadorActual().getCasillaActual();

        if (cas.getTipo() == TipoCasilla.CARCEL) {
            if (modeloQytetet.getJugadorActual().isEncarcelado() && !modeloQytetet.getJugadorActual().tengoCartaLibertad()) {
                JOptionPane.showMessageDialog(this, "Estás encarcelado. ¿Cómo vas a intentar salir?");
                this.SalirCarcelPagando.setEnabled(true);
                this.SalirCarcelDado.setEnabled(true);
            } else if (modeloQytetet.getJugadorActual().isEncarcelado() && modeloQytetet.getJugadorActual().tengoCartaLibertad()) {
                this.SiguienteJugador.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(this, "Estás de visita en la carcel");
                this.SiguienteJugador.setEnabled(true);
            }
        } else if (cas.getTipo() == TipoCasilla.SORPRESA) {
            JOptionPane.showMessageDialog(this, "¡SORPRESA!");
            this.AplicarSorpresa.setEnabled(true);
        } else if (cas.getTipo() == TipoCasilla.IMPUESTO || cas.getTipo() == TipoCasilla.PARKING || cas.getTipo() == TipoCasilla.SALIDA) // TIPO JUEZ¿?¿?
        {
            switch (cas.getTipo()) {
                case IMPUESTO:
                    JOptionPane.showMessageDialog(this, "Tienes que pagar tus impuestos");
                    break;
                case PARKING:
                    JOptionPane.showMessageDialog(this, "Descansa en el parking");
                    break;
                case SALIDA:
                    JOptionPane.showMessageDialog(this, "Cada vez que pases por aquí ganarás 1000 rupias");
                    break;
                default:
                    break;
            }
            this.SiguienteJugador.setEnabled(true);
        } else if (cas.getTipo() == TipoCasilla.CALLE) {
            if (resultado) {
                JOptionPane.showMessageDialog(this, "La calle tiene propietario. Pagas su alquiler");
                int coste = ((Calle) modeloQytetet.getJugadorActual().getCasillaActual()).cobrarAlquiler();
                modeloQytetet.getJugadorActual().modificarSaldo(-coste);
                this.SiguienteJugador.setEnabled(true);
            } else if (modeloQytetet.getJugadorActual().tengoSaldo(modeloQytetet.getJugadorActual().getCasillaActual().getCoste())) {
                this.ComprarPropiedad.setEnabled(true);
                JOptionPane.showMessageDialog(this, "La calle no tiene propietario. ¿Qué vas a hacer?");
                this.SiguienteJugador.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(this, "La calle no tiene propietario pero... ¡No tienes dinero! :(");
                this.SiguienteJugador.setEnabled(true);
            }
        } else if (cas.getTipo() == TipoCasilla.JUEZ) {
            this.SiguienteJugador.setEnabled(true);
        }

        if (modeloQytetet.getJugadorActual().getSaldo() <= 0) {
            JOptionPane.showMessageDialog(this, "El juego ha finalizado\n\n\n" + modeloQytetet.obtenerRanking());
        }
        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_JugarActionPerformed

    private void ComprarPropiedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComprarPropiedadActionPerformed
        boolean resultado = modeloQytetet.comprarTituloPropiedad();

        this.Jugar.setEnabled(false);
        this.SalirCarcelPagando.setEnabled(false);
        this.SalirCarcelDado.setEnabled(false);
        this.AplicarSorpresa.setEnabled(false);
        this.ComprarPropiedad.setEnabled(false);
        JOptionPane.showMessageDialog(this, "Has comprado la calle en la que te encuentras");
        this.SiguienteJugador.setEnabled(true);

        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_ComprarPropiedadActionPerformed

    private void AplicarSorpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AplicarSorpresaActionPerformed
        boolean resultado = modeloQytetet.aplicarSorpresa();

        this.Jugar.setEnabled(false);
        this.SalirCarcelPagando.setEnabled(false);
        this.SalirCarcelDado.setEnabled(false);
        this.AplicarSorpresa.setEnabled(false);
        this.SiguienteJugador.setEnabled(true);

        JOptionPane.showMessageDialog(this, "Se ha aplicado tu sorpresa");

        if (!resultado && modeloQytetet.getJugadorActual().getCasillaActual().getTipo() == TipoCasilla.CALLE) {
            JOptionPane.showMessageDialog(this, "Has caido en una casilla sin propietario");
            this.ComprarPropiedad.setEnabled(true);
        } else if (resultado && modeloQytetet.getJugadorActual().getCasillaActual().getTipo() == TipoCasilla.CALLE) {
            JOptionPane.showMessageDialog(this, "La calle tiene propietario. Pagas su alquiler");
            int coste = ((Calle) modeloQytetet.getJugadorActual().getCasillaActual()).cobrarAlquiler();
            modeloQytetet.getJugadorActual().modificarSaldo(-coste);
            this.ComprarPropiedad.setEnabled(false);
        } else {
            this.ComprarPropiedad.setEnabled(false);
        }

        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_AplicarSorpresaActionPerformed

    private void SiguienteJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SiguienteJugadorActionPerformed
        this.SiguienteJugador.setEnabled(true);
        modeloQytetet.siguienteJugador();
        habilitarComenzarTurno();
        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_SiguienteJugadorActionPerformed

    public void actualizar(Qytetet partida) {
        modeloQytetet = partida;
        vistaQytetet1.actualizar(modeloQytetet);
        habilitarComenzarTurno();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {

        ControladorQytetet controladorQytetet = new ControladorQytetet();
        CapturaNombreJugadores capturaNombres
                = new CapturaNombreJugadores(controladorQytetet, true);
        ArrayList<String> nombres = capturaNombres.obtenerNombres();

        Dado.createInstance(controladorQytetet);

        modeloQytetet = Qytetet.getInstance();
        modeloQytetet.inicializarJuego(nombres);
        vistaQytetet1.actualizar(modeloQytetet);

        controladorQytetet.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AplicarSorpresa;
    private javax.swing.JButton ComprarPropiedad;
    private javax.swing.JButton Jugar;
    private javax.swing.JButton SalirCarcelDado;
    private javax.swing.JButton SalirCarcelPagando;
    private javax.swing.JButton SiguienteJugador;
    private static GUIQytetet.VistaQytetet vistaQytetet1;
    // End of variables declaration//GEN-END:variables
}
